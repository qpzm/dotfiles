#
# Defines environment variables.
#
# See also: ~/.zsh/zsh.d/envs.zsh
#
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#   Jongwook Choi <wookayin@gmail.com>
#

#
# Browser
#

if [[ "$OSTYPE" == darwin* ]]; then
  export BROWSER='open'
fi

#
# Editors
#

export EDITOR='vim'
export VISUAL='vim'
export PAGER='less'

#
# Language
#

if [[ -z "$LANG" ]]; then
  export LANG='en_US.UTF-8'
fi

#
# Paths
#

typeset -gU cdpath fpath mailpath path

# Set the the list of directories that cd searches.
# cdpath=(
#   $cdpath
# )

# Set the list of directories that Zsh searches for programs.
# see ~/.zprofile as well
path=(
  $path
  /usr/local/{bin,sbin}
)

# Let ~/.local/bin take precedence
if ! (( ${path[(I)$HOME/.local/bin]} )); then
  path=( $HOME/.local/bin $path )
fi

# Additional $PATH configuration:

# dotfiles-populated bin.
if [ -d $HOME/.dotfiles/bin/ ]; then
  path=( $path $HOME/.dotfiles/bin )
fi

# Anaconda3
if [ -d $HOME/.anaconda3/bin/ ]; then
  path=( $path $HOME/.anaconda3/bin )
fi

# Miniconda3
if [ -d $HOME/.miniconda3/bin/ ]; then
  path=( $path $HOME/.miniconda3/bin )
elif [ -d "/usr/local/miniconda3/" ]; then
  path=( $path "/usr/local/miniconda3/bin" )
fi

# rust (cargo)
if [ -d $HOME/.cargo/bin/ ]; then
  path=( $path $HOME/.cargo/bin )
fi


#
# Less
#

# Set the default Less options.
# Mouse-wheel scrolling has been disabled by -X (disable screen clearing).
# Remove -X and -F (exit if the content fits on one screen) to enable it.
export LESS='-F -g -i -M -R -S -w -X -z-4'

# Set the Less input preprocessor.
if (( $+commands[lesspipe.sh] )); then
  export LESSOPEN='| /usr/bin/env lesspipe.sh %s 2>&-'
fi

#
# Temporary Files
#

if [[ -d "$TMPDIR" ]]; then
  export TMPPREFIX="${TMPDIR%/}/zsh"
  if [[ ! -d "$TMPPREFIX" ]]; then
    mkdir -p "$TMPPREFIX"
  fi
fi


#
# Add custom config directory for Prezto.
#  (note that this line is executed before initialization of prezto.)
#
fpath=(${ZDOTDIR:-$HOME}/.zsh/prezto-themes ~/.local/share/zsh/site-functions $fpath)


#
# Python - Virtualenv, etc.
#

if [[ "$(uname)" == "Darwin" ]]; then
    # Mac OS X: use python shipped by Homebrew for virtualenv.
    export VIRTUALENVWRAPPER_PYTHON='/usr/local/bin/python'
else
    # use default system python for virtualenv.
    export VIRTUALENVWRAPPER_PYTHON='/usr/bin/python'
fi

# Set the directory where virtual environments are stored.
export WORKON_HOME="$HOME/.virtualenvs"
export VIRTUAL_ENV_DISABLE_PROMPT=1

# ensure that all new virtual environments are isolated from the system site-packages.
export VIRTUALENVWRAPPER_VIRTUALENV_ARGS='--no-site-packages'

# python startup
export PYTHONSTARTUP=$HOME/.pythonrc.py


# Disable dot files in archive
export COPYFILE_DISABLE=true
. "$HOME/.cargo/env"
. "/Users/hyunminlee/.starkli/env"

export PATH="$PATH:/Users/hyunminlee/.local/bin"

# java
[ -s "$HOME/.jabba/jabba.sh" ] && source "$HOME/.jabba/jabba.sh"
export JAVA_HOME=/Library/Java/JavaVirtualMachines/adoptopenjdk-14.jdk/Contents/HOME

# rust
. "$HOME/.cargo/env"

export PATH="$PATH:$HOME/.foundry/bin"

[ -f "/Users/hyunminlee/.ghcup/env" ] && source "/Users/hyunminlee/.ghcup/env" # ghcup-env
# pnpm
export PNPM_HOME="/Users/hyunminlee/Library/pnpm"
export PATH="$PNPM_HOME:$PATH"
# pnpm end

# intellij
# export PATH="$PATH:/Applications/IntelliJ IDEA.app/Contents/MacOS"
# rustrover
export PATH="$PATH:/Users/hyunminlee/Library/Application Support/JetBrains/Toolbox/scripts"

# Reinitialize git submodules when switching between branches
function reinit() {
    git submodule deinit --force .
    git submodule update --init --recursive
}

# starkli
. "/Users/hyunminlee/.starkli/env"

# Use Starknet testnet
export STARKNET_NETWORK=alpha-goerli
# Set the default wallet implementation to be used by the CLI export
STARKNET_WALLET=starkware.starknet.wallets.open_zeppelin.OpenZeppelinAccount
# Set the path to the Cairo 1 compiler binary. Adapt this path to fit your installation if needed
export CAIRO_COMPILER_DIR=~/.cairo/target/release/

export STARKNET_ACCOUNT=~/.starkli-wallets/deployer/account.json
export STARKNET_KEYSTORE=~/.starkli-wallets/deployer/keystore.json
export PATH="$HOME/.cairo/target/release:$PATH"

# bun completions
[ -s "/Users/hyunminlee/.bun/_bun" ] && source "/Users/hyunminlee/.bun/_bun"

# bun
export BUN_INSTALL="$HOME/.bun"
export PATH="$BUN_INSTALL/bin:$PATH"

# postgresql
export PATH="/opt/homebrew/opt/postgresql@16/bin:$PATH"

export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"

export NARGO_HOME="/Users/hyunminlee/.nargo"

export PATH="$PATH:$NARGO_HOME/bin"

export BB_HOME="/Users/hyunminlee/.bb"

export PATH="$PATH:$BB_HOME"

export PATH=/opt/homebrew/bin:$PATH
export OPENSSL_DIR=$(brew --prefix openssl)
export OPENSSL_INCLUDE_DIR=$(brew --prefix openssl)/include
export OPENSSL_LIB_DIR=$(brew --prefix openssl)/lib

# intellij
export PATH="/Users/hyunminlee/Library/Application Support/JetBrains/Toolbox/scripts/:$PATH"

# [[ -s "/Users/hyunminlee/.gvm/scripts/gvm" ]] && source "/Users/hyunminlee/.gvm/scripts/gvm"
export PATH="${HOME}/.bb:${PATH}"

export PATH="/opt/homebrew/opt/llvm/bin:$PATH"
export LDFLAGS="-L/opt/homebrew/opt/llvm/lib"
export CPPFLAGS="-I/opt/homebrew/opt/llvm/include"
